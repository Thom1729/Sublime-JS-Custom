%YAML 1.2
%TAG ! tag:yaml-macros:yamlmacros.lib.extend:
---
!merge
variables: !merge
  jsx_identifier: '[_$[:alpha:]][-_$[:alnum:]]*'

contexts: !merge
  expression-begin: !prepend
    - include: jsx-tag

  jsx-interpolation:
    - match: '{'
      scope: punctuation.definition.interpolation.begin.js
      push:
        - - meta_scope: meta.jsx-interpolation.js
          - match: '}'
            scope: punctuation.definition.interpolation.begin.js
            pop: true
        - expression

  jsx-expect-tag-end:
    - match: '>'
      scope: punctuation.definition.tag.end.js
      pop: true
    - include: else-pop

  jsx-tag:
    - match: '<'
      scope: punctuation.definition.tag.begin.js
      set:
      - meta_scope: meta.tag.js
      - match: '/'
        set:
          - - meta_scope: invalid.illegal.unmatched-tag.js
            - include: else-pop
          - jsx-expect-tag-end
          - jsx-tag-name

      - match: (?=\S)
        set:
          - jsx-tag-attributes
          - jsx-tag-name

  jsx-tag-attributes:
    - meta_scope: meta.tag.js

    - match: '>'
      scope: punctuation.definition.tag.end.js
      set: jsx-body

    - match: '/'
      scope: punctuation.definition.tag.end.js
      set: jsx-expect-tag-end

    - include: jsx-interpolation

    - match: '{{jsx_identifier}}'
      scope: entity.other.attribute-name.js

    - match: '='
      scope: punctuation.separator.key-value.js

    - match: (?=['"])
      push: jsx-attribute-string

  jsx-attribute-string:
    - match: "'"
      scope: punctuation.definition.string.begin.js
      set:
        - meta_include_prototype: false
        - meta_scope: string.quoted.single.js
        - match: \'
          scope: punctuation.definition.string.end.js
          pop: true
        - include: jsx-html-escapes
    - match: '"'
      scope: punctuation.definition.string.begin.js
      set:
        - meta_include_prototype: false
        - meta_scope: string.quoted.double.js
        - match: \"
          scope: punctuation.definition.string.end.js
          pop: true
        - include: jsx-html-escapes

  jsx-html-escapes:
    - match: '(&)#?[[:alnum:]]+(;)'
      scope: constant.character.escape.js
      captures:
        1: punctuation.definition.entity.js
        2: punctuation.definition.entity.js

  jsx-tag-name:
    - match: '{{jsx_identifier}}'
      scope: entity.name.tag.js
      set:
        - match: '[:.]'
          scope: punctuation.accessor.js
          set: jsx-tag-name
        - include: else-pop
    - include: else-pop

  jsx-body:
    - meta_include_prototype: false
    - meta_scope: meta.jsx.js

    - match: '<'
      scope: punctuation.definition.tag.begin.js
      set:
        - meta_scope: meta.tag.js

        - match: '/'
          scope: punctuation.definition.tag.begin.js
          set:
            - jsx-expect-tag-end
            - jsx-tag-name

        - match: (?=\S)
          set:
            - jsx-body
            - jsx-tag-attributes
            - jsx-tag-name

    - include: jsx-html-escapes
    - include: jsx-interpolation
