%YAML 1.2
%TAG ! tag:yaml-macros:yamlmacros.lib.arguments,yamlmacros.lib.include:
---
contexts:
  tagged-template:
    - meta_prepend: true
    - include: literal-string-template-custom-comments
    - include: literal-string-template-custom-tags
    - include: styled-components

  expression-begin:
    - meta_prepend: true
    # Keep the slow backreferences out of this frequently-used context.
    - match: (?=`)
      set:
        - include: literal-string-template-custom-comments
        - include: literal-string-template-custom-lookahead
        - include: custom-templates-default

  custom-templates-default: !if
    - !argument default
    - !with
        - include: !argument default
        - !include_resource Packages/JSCustom/extensions/custom_templates/template.yaml
    - - include: literal-string-template

  literal-string-template-custom-tags: !foreach
    in: !argument [tags, {}]
    as: [tag, include]
    value:
      match: !format '(?:{tag})(?=\s*`)'
      scope: variable.function.tagged-template.js
      set: !include_resource Packages/JSCustom/extensions/custom_templates/template.yaml

  literal-string-template-custom-comments: !foreach
    in: !argument [comments, {}]
    as: [tag, include]
    value:
      match: !format '(?<=/\*(?:{tag})\*/|/\* (?:{tag}) \*/)'
      scope: variable.function.tagged-template.js
      set: !include_resource Packages/JSCustom/extensions/custom_templates/template.yaml

  literal-string-template-custom-lookahead: !foreach
    in: !argument [lookaheads, {}]
    as: [lookahead, include]
    value:
      match: !format '(?=`(?:{lookahead}))'
      scope: variable.function.tagged-template.js
      set: !include_resource Packages/JSCustom/extensions/custom_templates/template.yaml

  styled-components: !if
    - !argument styled_components
    - - match: (?=(?:styled|css|createGlobalStyle|injectGlobal|keyframes){{identifier_break}})
        set:
          - styled-component-end
          - styled-component-begin
    - []

  styled-component-end:
    - match: \.
      scope: punctuation.accessor.dot.js
      push: styled-component-begin

    - match: (?=`)
      set: !with
        - include: scope:source.js.css
        - !include_resource Packages/JSCustom/extensions/custom_templates/template.yaml

    - include: expression-end

  styled-component-begin:
    - match: '{{non_reserved_identifier}}(?=\s*\()'
      scope: variable.function.js
      pop: true

    - match: '{{non_reserved_identifier}}(?=\s*`)'
      scope: variable.function.tagged-template.js
      pop: true

    - match: '{{non_reserved_identifier}}'
      scope: variable.other.readwrite.js
      pop: true

    - include: else-pop
